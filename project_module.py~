from math import sqrt
from numpy import dot, ones, tile, zeros, array

#Project silhouette points onto a plane
def project_points(points1, p0=[400.0, 0.0, 0.0], n=[1.0,0,0], l0=[0.0,250.0,100.0]):
    # p0 is point on the plane
    # n is the plane normal
    # l0 is point from view
    # points are the points that are projected
    
    p0=array(p0); n=array(n); l0=array(l0);
    
    nlen=points1.shape[0]
    
    l1=points1-l0
    
    l1_norm=((points1**2).sum(axis=1))**0.5
    l1_norm=l1_norm.reshape(l1_norm.shape[0], 1)
    l1=l1/l1_norm
    
    #solving for d for each vertex (d=((p0-l0) dot n) / (l dot n) )
    d1=dot((p0-l0), n)/((l1*n).sum(axis=1))
    d1=d1.reshape(d1.shape[0],1)
    
    #projected points
    points_proj=d1*l1 + l0.reshape(1,3)
    
    return points_proj
    
    
#Rotate mesh in x,y plane around the CM
def rotate_mesh(points1, angle1=1.5708):
    # points -  vertices of mesh
    # angle1 -  angle of rotation
    x=1
    
