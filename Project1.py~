import numpy as np

try:
    import mayavi.mlab as mlab
except:
    print "Reverting to older enthought package"
    import enthought.mayavi.mlab as mlab
    
#from MeshProject import MeshProject, DoubleVector, IntVector
from MeshProject import *
import project_module as pm
import mesh_class as mc
import time

tic=time.clock()

# reading in mesh
MH=mc.Mesh(h5file='casedat.h5', style="matlab")
MH.centre_mesh()


    
#C++ input and output
#initialisation
MshSil=MeshProject(DoubleVector(MH.faces[:,0]), DoubleVector(MH.faces[:,1]), DoubleVector(MH.faces[:,2]), DoubleVector(MH.vertices[:,0]), DoubleVector(MH.vertices[:,1]), DoubleVector(MH.vertices[:,2]))


#slow bit
Er1=MshSil.unique_edges()
#

#rotation and update of vertices
MH.rotate_mesh()
MshSil.update_vertices(DoubleVector(MH.vertices[:,0]), DoubleVector(MH.vertices[:,1]), DoubleVector(MH.vertices[:,2]))

Er2=MshSil.normals_face()
# Viewing direction
ViewP=[400.0, 0.0, 0.0]
p0=[-200.0, 0.0, 0.0]
MshSil.silhouette_edges(DoubleVector(ViewP))
SList=MshSil.edge_silhouette_num() 
F1=IntVector(SList); F2=IntVector(SList); V1=IntVector(SList); V2=IntVector(SList)
MshSil.silhouette_out(F1, F2, V1, V2)
F1=np.array(F1); F2=np.array(F2); V1=np.array(V1); V2=np.array(V2)

V1coord=MH.vertices[V1, :]
V2coord=MH.vertices[V2, :]

# Projecting onto a plane
points_proj=pm.project_points(V1coord, l0=ViewP, p0=p0) 

toc=time.clock()

#plotting
mlab.figure(bgcolor=(0.9,0.9,0.9))
mlab.triangular_mesh(MH.vertices[:,0], MH.vertices[:,1], MH.vertices[:,2], MH.faces)
mlab.axes()
mlab.points3d(V1coord[:,0], V1coord[:,1], V1coord[:,2], scale_factor=2, color=(0,0,0))
mlab.points3d(points_proj[:,0], points_proj[:,1], points_proj[:,2], scale_factor=2, color=(0,1,0))
mlab.points3d(ViewP[0], ViewP[1], ViewP[2], scale_factor=15, color=(1,0,0))

timer=tic-toc
print "Time elapsed: %.2f" % (toc-tic)
